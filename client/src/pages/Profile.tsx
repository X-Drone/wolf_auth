// src/pages/Profile.tsx
import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import "../styles/Profile.css"

interface Site {
  id: number;
  name: string;
  url: string;
  icon?: string;
}

interface Notification {
  id: number;
  text: string;
  time: string;
}

interface Friend {
  id: number;
  name: string;
  status: 'online' | 'offline';
  avatar?: string;
}

const Profile: React.FC = () => {
  const navigate = useNavigate();

  // –ü—É—Ç—å –∫ –∞–≤–∞—Ç–∞—Ä—É –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ public/)
  const defaultAvatarPath = '/media/default.png';

  const user = {
    avatar: defaultAvatarPath, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    username: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
    email: 'ivan.petrov@example.com',
    status: 'online',
    telegram: 'https://t.me/your_username', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π Telegram
  };

  const sites: Site[] = [
    { id: 1, name: '–ú–æ–π –±–ª–æ–≥', url: 'https://blog.com', icon: 'üìù' },
    { id: 2, name: '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ', url: 'https://portfolio.com', icon: 'üíº' },
    { id: 3, name: 'GitHub', url: 'https://github.com', icon: 'üíª' },
    { id: 4, name: 'YouTube', url: 'https://youtube.com', icon: 'üì∫' },
    { id: 5, name: 'LinkedIn', url: 'https://linkedin.com', icon: 'üëî' },
    { id: 6, name: 'Twitter', url: 'https://twitter.com', icon: 'üê¶' },
  ];

  const notifications: Notification[] = [
    { id: 1, text: '–ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã', time: '5 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { id: 2, text: '–í–∞–∂–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ', time: '10 –º–∏–Ω –Ω–∞–∑–∞–¥' },
    { id: 3, text: '–í–∞—à –ø—Ä–æ–µ–∫—Ç –æ–¥–æ–±—Ä–µ–Ω', time: '1 —á–∞—Å –Ω–∞–∑–∞–¥' },
    { id: 4, text: '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –¥—Ä—É–≥–∞', time: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥' },
  ];

  const friends: Friend[] = [
    { id: 1, name: '–ê–Ω–Ω–∞', status: 'online', avatar: 'https://via.placeholder.com/50' },
    { id: 2, name: '–î–º–∏—Ç—Ä–∏–π', status: 'offline', avatar: 'https://via.placeholder.com/50' },
    { id: 3, name: '–ï–ª–µ–Ω–∞', status: 'online', avatar: 'https://via.placeholder.com/50' },
    { id: 4, name: '–ê–ª–µ–∫—Å–µ–π', status: 'offline', avatar: 'https://via.placeholder.com/50' },
    { id: 5, name: '–ú–∞—Ä–∏—è', status: 'online', avatar: 'https://via.placeholder.com/50' },
  ];

  const goToSite = (url: string) => {
    window.open(url, '_blank');
  };

  const handleLogout = () => {
    localStorage.removeItem('token');
    navigate('/login');
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ö –ø—Ä–æ—à–ª–æ–º—É —Å–∞–π—Ç—É"
  const handleGoBack = () => {
    window.history.back();
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–¢–µ–ª–µ–≥—Ä–∞–º"
  const handleTelegram = () => {
    window.open("https://t.me/BabanSatiBot")
  };

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" –∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"
  const handleEditProfile = () => {
    
    navigate('/edit-profile'); // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ, –∫–æ–≥–¥–∞ –¥–æ–±–∞–≤–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç
  };

  const handleSettings = () => {
    navigate('/settings'); // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ, –∫–æ–≥–¥–∞ –¥–æ–±–∞–≤–∏—Ç–µ –º–∞—Ä—à—Ä—É—Ç
  };


  const [activeTab, setActiveTab] = useState<'friends' | 'notifications'>('friends'); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏

  return (
    <div className="profile-container">
      <div className="profile-card">
        {/* –ö–Ω–æ–ø–∫–∞ "–ö –ø—Ä–æ—à–ª–æ–º—É —Å–∞–π—Ç—É" –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É */}
        <button onClick={handleGoBack} className="back-button">
          ‚Üê –ù–∞–∑–∞–¥
        </button>

        {/* –ö–Ω–æ–ø–∫–∞ "–í—ã–π—Ç–∏" –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É */}
        <button onClick={handleLogout} className="logout-button">
          –í—ã–π—Ç–∏
        </button>
        <div className='margin'></div>
        {/* –°–µ–∫—Ü–∏—è —Å–∞–π—Ç–æ–≤ */}
        <section className="sites-section">
          <h2 className="section-title">–ú–æ–∏ –°–∞–π—Ç—ã</h2>
          <ul className="sites-list">
            {sites.map(site => (
              <li key={site.id}>
                <a
                  href={site.url}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="site-link"
                  onClick={(e) => {
                    e.preventDefault();
                    goToSite(site.url);
                  }}
                >
                  <span className="site-icon">{site.icon}</span>
                  {site.name}
                </a>
              </li>
            ))}
          </ul>
        </section>

        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ—Ñ–∏–ª—è */}
        <div className="profile-header">
          <div className="avatar-container">
            <img src={user.avatar} alt="–ê–≤–∞—Ç–∞—Ä" className="avatar" onError={(e) => { (e.target as HTMLImageElement).src = 'https://via.placeholder.com/150'; }} />
            <div className="avatar-badge">
              üëë
            </div>
          </div>

          <div className="user-info">
            <h1>{user.username}</h1>
            <p className="text-muted">{user.email} ‚Ä¢ <span className={`friend-status ${user.status}`}>{user.status === 'online' ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ–ª–∞–π–Ω'}</span></p>
             <p className="text-muted">{user.telegram} ‚Ä¢ <span className={`friend-status ${user.status}`}>{user.status === 'online' ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ–ª–∞–π–Ω'}</span></p>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", "–¢–µ–ª–µ–≥—Ä–∞–º", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–†–µ–∂–∏–º" */}
          <div className="profile-buttons">
            <button onClick={handleEditProfile} className="profile-button">
              ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
            </button>
            <button onClick={handleTelegram} className="profile-button">
              —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç
            </button>
            <button onClick={handleSettings} className="profile-button">
              ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏
            </button>
          </div>
        </div>

        {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–∫–ª–∞–¥–æ–∫ */}
        <div className="tabs">
          <button
            className={`tab-button ${activeTab === 'friends' ? 'active' : ''}`}
            onClick={() => setActiveTab('friends')}
          >
            üë• –î—Ä—É–∑—å—è
          </button>
          <button
            className={`tab-button ${activeTab === 'notifications' ? 'active' : ''}`}
            onClick={() => setActiveTab('notifications')}
          >
            üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
          </button>
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ */}
        <div className="tab-content">
          {activeTab === 'friends' && (
            <div className="profile-section">
              <h3 className="section-title">–°–ø–∏—Å–æ–∫ –î—Ä—É–∑–µ–π</h3>
              {friends.length > 0 ? (
                <ul className="friends-list" style={{ listStyle: 'none', padding: 0, margin: 0 }}>
                  {friends.map(friend => (
                    <li key={friend.id} className="friend-card">
                      <img src={friend.avatar || 'https://via.placeholder.com/50'} alt={`–ê–≤–∞—Ç–∞—Ä ${friend.name}`} className="friend-avatar" onError={(e) => { (e.target as HTMLImageElement).src = 'https://via.placeholder.com/50'; }} />
                      <div className="friend-info">
                        <div className="friend-name">{friend.name}</div>
                        <div className={`friend-status ${friend.status}`}>
                          <i className="fas fa-circle me-1"></i> {friend.status === 'online' ? '–û–Ω–ª–∞–π–Ω' : '–û—Ñ–ª–∞–π–Ω'}
                        </div>
                      </div>
                    </li>
                  ))}
                </ul>
              ) : (
                <p className="text-center text-muted py-4">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥—Ä—É–∑–µ–π.</p>
              )}
            </div>
          )}

          {activeTab === 'notifications' && (
            <div className="profile-section">
              <h3 className="section-title">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
              {notifications.length > 0 ? (
                <ul className="notifications-list" style={{ listStyle: 'none', padding: 0, margin: 0 }}>
                  {notifications.map(notification => (
                    <li key={notification.id} className="notification-item">
                      <div className="notification-text">{notification.text}</div>
                      <div className="notification-time">{notification.time}</div>
                    </li>
                  ))}
                </ul>
              ) : (
                <div className="text-center py-4">
                  <i className="fas fa-bell-slash fa-2x text-muted mb-2"></i>
                  <p className="text-muted">–ù–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</p>
                </div>
              )}
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Profile;